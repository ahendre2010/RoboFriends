{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","Component","constructor","super","this","state","searchField","componentDidMount","fetch","then","response","json","users","setState","render","onSearchChange","filteredRobots","filter","robot","toLowerCase","includes","length","connect","dispatch","event","payload","target","value","initialState","store","createStore","action","Object","assign","rootElement","document","getElementById","ReactDOM"],"mappings":"8MAceA,G,MAZF,EAAGC,OAAMC,QAAOC,QAEzB,yBAAKC,UAAU,oDACb,yBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,6BACE,4BAAKF,GACL,2BAAIC,MCaGK,EAlBE,EAAGC,YAGhB,kBAAC,WAAD,KACGA,EAAOC,IAAI,CAACC,EAAMC,IAEf,kBAAC,EAAD,CACEC,IAAKD,EACLR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,UCEdW,EAbG,EAAGC,kBAEjB,yBAAKV,UAAU,OACb,2BACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,KCGHI,EAVCC,GAEZ,yBACEC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAE/DJ,EAAMK,U,MCcb,MAAMC,UAAYC,YAChBC,cACEC,QACAC,KAAKC,MAAQ,CACXtB,OAAQ,GACRuB,YAAa,IAIjBC,oBACEC,MAAM,8CACHC,KAAMC,GAAaA,EAASC,QAC5BF,KAAMG,GAAUR,KAAKS,SAAS,CAAE9B,OAAQ6B,KAG7CE,SAAU,IACA/B,EAAWqB,KAAKC,MAAhBtB,OADD,EAEiCqB,KAAKV,MAArCY,EAFD,EAECA,YAAaS,EAFd,EAEcA,eACfC,EAAiBjC,EAAOkC,OAAQC,GAC7BA,EAAM1C,KAAK2C,cAAcC,SAASd,EAAYa,gBAGvD,OAAQpC,EAAOsC,OAGb,yBAAK1C,UAAU,MACb,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWU,aAAc0B,IACzB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUhC,OAAQiC,MANtB,0CAaSM,kBAhDUjB,IAChB,CACLC,YAAaD,EAAMC,cAIKiB,IACnB,CACLR,eAAiBS,GAAUD,ECbtB,CACLjC,KCL+B,sBDM/BmC,QDWmDD,EAAME,OAAOC,UAwCrDL,CAA6CtB,GGvDtD4B,EAAe,CACnBtB,YAAa,ICMTuB,G,MAAQC,YDHc,CAACzB,EAAQuB,EAAcG,EAAS,MAE1D,OAAQA,EAAOzC,MACb,IDT+B,sBCU7B,OAAO0C,OAAOC,OAAO,GAAI5B,EAAO,CAAEC,YAAayB,EAAON,UACxD,QACE,OAAOpB,MCDP6B,EAAcC,SAASC,eAAe,QAC5CC,IAASvB,OACP,kBAAC,IAAD,CAAUe,MAAOA,GACf,kBAAC,EAAD,OAEFK,I","file":"static/js/main.265b1011.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Fragment } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    //Fragment <Fragment> </Fragment> or <> </>\r\n    <Fragment>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{ overflow: \"scroll\", border: \"5px solid black\", height: \"800px\" }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport \"./App.css\";\r\n\r\nimport { setSearchField } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchField\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value))\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  render() {\r\n    const { robots } = this.state;\r\n    const { searchField, onSearchChange } = this.props;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n\r\n    return !robots.length ? (\r\n      <h1>Loading..</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">RoboFriends</h1>\r\n        <SearchBox searchChange={onSearchChange} />\r\n        <Scroll>\r\n          <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { CHANGE_SEARCH_FIELD } from \"./constants\";\r\n\r\nexport const setSearchField = (text) => {\r\n  //console.log(text);\r\n  return {\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n  };\r\n};\r\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\r\n","import { CHANGE_SEARCH_FIELD } from \"./constants\";\r\n\r\nconst initialState = {\r\n  searchField: \"\"\r\n};\r\n\r\nexport const searchRobots = (state = initialState, action = {}) => {\r\n  //console.log(action.type);\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return Object.assign({}, state, { searchField: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport { searchRobots } from \"./reducers\";\nimport \"tachyons\";\n\nconst store = createStore(searchRobots);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}